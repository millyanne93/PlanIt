name: CI/CD - Build and Push Docker Images
on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Test backend
        env:
          MONGO_URI: "mongodb://localhost:27017/planit_test"
          FLASK_ENV: "testing"
        run: |
          cd backend
          pip install --upgrade pip
          pip install -r requirements.txt
          # Wait for MongoDB to be ready
          sleep 5
          # Create a .env file as backup
          echo "MONGO_URI=mongodb://localhost:27017/planit_test" > .env
          # Export the environment variable and test
          export MONGO_URI="mongodb://localhost:27017/planit_test"
          python -c "import os; print('MONGO_URI:', os.environ.get('MONGO_URI')); print('All env vars with MONGO:', {k: v for k, v in os.environ.items() if 'MONGO' in k}); from app.main import create_app; app = create_app(); print('Backend app created successfully')"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Test frontend
        run: |
          cd frontend
          npm ci
          npm run build
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            millyanne93/planit-frontend:latest
            millyanne93/planit-frontend:${{ github.sha }}
            millyanne93/planit-frontend:v${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            millyanne93/planit-backend:latest
            millyanne93/planit-backend:${{ github.sha }}
            millyanne93/planit-backend:v${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  build-only:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build frontend (no push)
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: planit-frontend:dev
      - name: Build backend (no push)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: planit-backend:dev
